#########################
#
# Master parameters
#

[master]

# user name of the daemon process
uname = doleynik

# group name of the daemon process
gname = doleynik

# logger name
loggername = harvester

# harvester id - unique id as registered also in panda server
harvester_id = OLCF_Titan_ATLAS



##########################
#
# Database parameters
#

[db]

# filename
database_filename = /lustre/atlas/proj-shared/hep110/harvester/db/production.db

# verbose
verbose = False

# number of database connections in each process
nConnections = 10

# database engine : sqlite or mariadb
engine = sqlite

# user name
user = harvester

# password
password = #######

# schema
schema = HARVESTER




##########################
#
# Panda Connection parameters
#

[pandacon]

# number of connections
nConnections = 5

# timeout
timeout = 180

# CA file
ca_cert = /lustre/atlas/proj-shared/csc108/app_dir/pilot/grid_env/external/grid-security/certificates/

# certificate
cert_file = /ccs/home/doleynik/x509up_u10469

# key
key_file = /ccs/home/doleynik/x509up_u10469

# base URL via http
pandaURL = http://pandaserver.cern.ch:25080/server/panda

# base URL via https
pandaURLSSL = https://pandaserver.cern.ch:25443/server/panda

# base URL via proxy
pandaURLProxy = http://pandaserver.cern.ch:25080/server/panda

# verbose
verbose = False




##########################
#
# Queue Config parameters
#

[qconf]

# config file
configFile = OLCF_queueconfig_prod.json

# queue list : one queue name following a whitespace per line
queueList =
 Titan_long_MCORE




##########################
#
# Command manager parameters
#
[commandmanager]

# bulk size for panda server interactions
commands_bulk_size = 20

# sleep interval in sec
sleepTime = 5




##########################
#
# Job Fetcher parameters
#

[jobfetcher]

# number of threads
nThreads = 5

# number of queues to fetch jobs in one cycle
nQueues = 1

# max number of jobs per queue in one cycle
maxJobs = 800

# lookup interval in sec
lookupTime = 30

# sleep interval in sec
sleepTime = 120




##########################
#
# Propagator parameters
#

[propagator]

# number of threads
nThreads = 3

# max number of jobs tp update in one cycle
maxJobs = 400

# number of jobs in bulk update
nJobsInBulk = 50

# max number of workers tp update in one cycle
maxWorkers = 5

# number of workers in bulk update
nWorkersInBulk = 10

# lock interval in sec
lockInterval = 180

# update interval in sec
updateInterval = 600

# sleep interval in sec
sleepTime = 90




##########################
#
# Preparator parameters
#

[preparator]

# number of threads
nThreads = 5

# max number of jobs to check in one cycle
maxJobsToCheck = 200

# max number of jobs to trigger in one cycle
maxJobsToTrigger = 400

# lock interval in sec
lockInterval = 180

# check interval in sec
checkInterval = 180

# trigger interval in sec
triggerInterval = 180

# sleep interval in sec
sleepTime = 60




##########################
#
# Submitter parameters
#

[submitter]

# number of threads
nThreads = 1

# max number of queues to try in one cycle
nQueues = 1

# interval for queue lookup
lookupTime = 60

# lock interval in sec
lockInterval = 180

# check interval in sec
checkInterval = 60

# sleep interval in sec
sleepTime = 60




##########################
#
# Monitor parameters
#

[monitor]

# number of threads
nThreads = 1

# max number of wokers per queue to try in one cycle
maxWorkers = 5

# lock interval in sec
lockInterval = 90

# check interval in sec
checkInterval = 20

# sleep interval in sec
sleepTime = 60




##########################
#
# Credential Manager parameters
#
# Note : One credential data following a whitespace per line to support multiple credentials. Empty lines are not
#         allowed, so that a dummy string like 'dummy' needs to be added if some parameters like voms are unnecessary.

[credmanager]

# module name
moduleName =
 pandaharvester.harvestercredmanager.no_voms_cred_manager
 pandaharvester.harvestercredmanager.no_voms_cred_manager

# class name
className =
 NoVomsCredManager
 NoVomsCredManager

# original certificate file to generate new short-lived certificate
certFile =
 /ccs/home/doleynik/x509up_u10469
 /ccs/home/doleynik/x509up_u10469

# the name of short-lived certificate
outCertFile =
 /ccs/home/doleynik/x509up_pilot
 /ccs/home/doleynik/x509up_prod

# voms
voms =
 atlas:/atlas/Role=pilot
 atlas:/atlas/Role=production

# sleep interval in sec
sleepTime = 1800




##########################
#
# Stager parameters
#

[stager]

# number of threads
nThreads = 3

# max number of jobs to check in one cycle
maxJobsToCheck = 20

# max number of jobs to trigger in one cycle
maxJobsToTrigger = 10

# max number of jobs to zip in one cycle
maxJobsToZip = 10

# lock interval in sec
lockInterval = 600

# check interval in sec
checkInterval = 240

# trigger interval in sec
triggerInterval = 300

# sleep interval in sec
sleepTime = 120



##########################
#
# EventFeeder parameters
#

[eventfeeder]

# number of threads
nThreads = 3

# max number of workers per queue to try in one cycle
maxWorkers = 50

# lock interval in sec
lockInterval = 180

# sleep interval in sec
sleepTime = 60


##########################
#
# Cacher parameters
#

[cacher]

# one data following a white space per line
data =
 ddmendpoints_objectstores.json||http://atlas-agis-api.cern.ch/request/ddmendpoint/query/list/?json&state=ACTIVE&site_state=ACTIVE&preset=dict&json_pretty=1&type[]=OS_LOGS&type[]=OS_ES
 panda_queues.json||http://atlas-agis-api.cern.ch/request/pandaqueue/query/list/?json&preset=schedconf.all&vo_name=atlas
 proxy_pilot||file:/ccs/home/doleynik/x509up_pilot
 proxy_production||file:/ccs/home/doleynik/x509up_prod
# refresh interval in minint
refreshInterval = 10

# sleep interval in sec
sleepTime = 60





##########################
#
# Payload interaction parameters
#

[payload_interaction]

# worker attributes
workerAttributesFile = worker_attributes.json

# job report
jobReportFile = PilotjobReport.json

# event status dump file in json
eventStatusDumpJsonFile = event_status.dump.json

# event status dump file in xml
eventStatusDumpXmlFile = _event_status.dump

# job request
jobRequestFile = worker_requestjob.json

# job spec file
jobSpecFile = HPCJobs.json

# event request
eventRequestFile = worker_requestevents.json

# event ranges file
eventRangesFile = JobsEventRanges.json

# update events
updateEventsFile = worker_updateevents.json

# PFC for input files
xmlPoolCatalogFile = PoolFileCatalog_H.xml

# get PandaIDs
pandaIDsFile = worker_pandaids.json




##########################
#
# Front-end parameters
#

[frontend]

# port number for simple http frontend. For apache frontend port number is set in httpd.conf
portNumber = 25080

# number of threads
nThreads = 10

# verbose
verbose = False

# type : simple or apache
type = simple





##########################
#
# Sweeper parameters
#

[sweeper]

# number of threads
nThreads = 3

# max number of workers per queue to try in one cycle
maxWorkers = 50

# check interval in sec
checkInterval = 180

# sleep interval in sec
sleepTime = 60

# duration in hours to keep finished workers
keepFinished = 12

# duration in hours to keep failed workers
keepFailed = 72

# duration in hours to keep cancelled workers
keepCancelled = 72

##########################
#
# Watcher parameters
#

[watcher]

# action is taken when the last message is older than maxStalled sec. set 0 to disable the action
maxStalled = 300

# the number of messages to check interval
nMessages = 1000

# action is taken when it took more than maxDuration sec to generate nMessages messages. set 0 to disable the action
maxDuration = 600

# check interval in sec
checkInterval = 180

# sleep interval in sec
sleepTime = 60

# a comma-concatenated list of actions (email: to send alarms, kill: to be killed). or empty if no action
actions =

# hostname of SMTP server. note that parameters with the prefix of "mail" are required on
mailServer =

# port of SMTP server
mailPort = 25

# login user of SMTP server if any. leave empty if SMTP doesn't need to logon
mailUser =

# login password of SMTP server if any. leave empty if SMTP doesn't need to logon
mailPassword =

# email sender
mailFrom =

# a comma-concatenated list of email recipients
mailTo =
